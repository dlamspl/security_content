#############
# Automatically generated by generator.py in splunk/security_content
# On Date: 2021-11-29T07:59:07 UTC
# Author: Splunk Security Research
# Contact: research@splunk.com
#############

### ESCU DETECTIONS ###

[ESCU - Network scanning dynamic 1hour - Rule]
action.escu = 0
action.escu.enabled = 1
description = Detect when a single source host is accessing multiple destination ports on a single IP over a short period of time (1 hour)
action.escu.mappings = {"kill_chain_phases": ["Reconnaissance", "Lateral Movement"], "mitre_attack": ["T1595", "T1046"]}
action.escu.data_models = ["Network_Traffic"]
action.escu.eli5 = Detect when a single source host is accessing multiple destination ports on a single IP over a short period of time (1 hour)
action.escu.how_to_implement = To successfully implement this search, you will need to ensure that Network data is populating
action.escu.known_false_positives = Some services do discovery. If it is coming from public IP on your perimeter its most likely a scanner
action.escu.creation_date = 2021-11-29
action.escu.modification_date = 2021-11-29
action.escu.confidence = high
action.escu.full_search_name = ESCU - Network scanning dynamic 1hour - Rule
action.escu.search_type = detection
action.escu.product = ["Splunk Enterprise", "Splunk Enterprise Security", "Splunk Cloud"]
action.escu.providing_technologies = []
action.escu.analytic_story = ["UPDATE_STORY_NAME"]
action.risk = 1
action.risk.param._risk_message = None
action.risk.param._risk = []
action.risk.param.verbose = 0
cron_schedule = 0 * * * *
dispatch.earliest_time = -70m@m
dispatch.latest_time = -10m@m
action.correlationsearch.enabled = 1
action.correlationsearch.label = ESCU - Network scanning dynamic 1hour - Rule
action.correlationsearch.annotations = {"analytic_story": ["UPDATE_STORY_NAME"], "confidence": null, "context": null, "impact": null, "kill_chain_phases": ["Reconnaissance", "Lateral Movement"], "mitre_attack": ["T1595", "T1046"], "observable": null}
schedule_window = auto
action.notable = 1
action.notable.param.nes_fields = ['dest', 'src']
action.notable.param.rule_description = Detect when a single source host is accessing multiple destination ports on a single IP over a short period of time (1 hour)
action.notable.param.rule_title = Network scanning dynamic 1hour
action.notable.param.security_domain = network
action.notable.param.severity = high
alert.digest_mode = 1
disabled = true
enableSched = 1
allow_skew = 100%
counttype = number of events
relation = greater than
quantity = 0
realtime_schedule = 0
is_visible = false
search = | tstats `security_content_summariesonly` count from datamodel=Network_Traffic.All_Traffic by _time, All_Traffic.src ,All_Traffic.dest,All_Traffic.dest_port |bucket _time span=1h |stats dc(All_Traffic.dest_port) as port_count values(All_Traffic.dest_port) by _time, All_Traffic.src ,All_Traffic.dest |eventstats avg(port_count) as avg_port stdev(port_count) as std_port by _time |where std_port> 0 AND port_count>4*std_port | `network_scanning_dynamic_1hour_filter`

### END ESCU DETECTIONS ###


### ESCU BASELINES ###



### ESCU RESPONSE TASKS ###



### END ESCU RESPONSE TASKS ###